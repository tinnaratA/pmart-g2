# Generated by Django 2.0.4 on 2018-04-22 18:41

from decimal import Decimal
import django.contrib.postgres.fields.hstore
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_prices.models
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('merchandise', 'hstore_setup'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeChoiceValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100)),
                ('color', models.CharField(blank=True, max_length=7, validators=[django.core.validators.RegexValidator('^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
            ],
            options={
                'db_table': 'merchandise_attribute_choice',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('slug', models.SlugField(max_length=128)),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Merchandise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField()),
                ('price', django_prices.models.MoneyField(currency='THB', decimal_places=2, max_digits=12)),
                ('available_on', models.DateField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=True)),
                ('attributes', django.contrib.postgres.fields.hstore.HStoreField(default={})),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'merchandise',
                'permissions': (('view_merchandise', 'Can view merchandises'), ('edit_merchandise', 'Can edit merchandises'), ('view_properties', 'Can view merchandise properties'), ('edit_properties', 'Can edit merchandise properties')),
            },
        ),
        migrations.CreateModel(
            name='MerchandiseAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ('slug',),
            },
        ),
        migrations.CreateModel(
            name='MerchandiseCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=128)),
                ('description', models.TextField(blank=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='merchandise.MerchandiseCategory')),
            ],
            options={
                'db_table': 'merchandise_category',
                'permissions': (('view_merchandise_category', 'Can view merchandise categories'),),
            },
        ),
        migrations.CreateModel(
            name='MerchandiseImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', versatileimagefield.fields.VersatileImageField(upload_to='merchandises')),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20)),
                ('alt', models.CharField(blank=True, max_length=128)),
                ('order', models.PositiveIntegerField(editable=False)),
                ('merchandise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='merchandise.Merchandise')),
            ],
            options={
                'db_table': 'merchandise_image',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='MerchandiseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('has_variants', models.BooleanField(default=True)),
                ('is_shipping_required', models.BooleanField(default=False)),
                ('merchandise_attributes', models.ManyToManyField(blank=True, related_name='merchandise_type', to='merchandise.MerchandiseAttribute')),
                ('variant_attributes', models.ManyToManyField(blank=True, related_name='merchandise_variant_types', to='merchandise.MerchandiseAttribute')),
            ],
            options={
                'db_table': 'merchandise_type',
                'permissions': (('view_merchandise_type', 'Can view merchandise types'),),
            },
        ),
        migrations.CreateModel(
            name='MerchandiseVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('price_override', django_prices.models.MoneyField(blank=True, currency='THB', decimal_places=2, max_digits=12, null=True)),
                ('attributes', django.contrib.postgres.fields.hstore.HStoreField(default={})),
            ],
            options={
                'db_table': 'merchandise_variant',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=Decimal('1'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_allocated', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('cost_price', django_prices.models.MoneyField(blank=True, currency='THB', decimal_places=2, max_digits=12, null=True)),
            ],
            options={
                'db_table': 'merchandise_stock',
            },
        ),
        migrations.CreateModel(
            name='StockLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'permissions': (('view_stock_location', 'Can view stock location'), ('edit_stock_location', 'Can edit stock location')),
            },
        ),
        migrations.CreateModel(
            name='VariantImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_images', to='merchandise.MerchandiseImage')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_images', to='merchandise.MerchandiseVariant')),
            ],
        ),
        migrations.AddField(
            model_name='stock',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='merchandise.StockLocation'),
        ),
        migrations.AddField(
            model_name='stock',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='merchandise.MerchandiseVariant'),
        ),
        migrations.AddField(
            model_name='merchandisevariant',
            name='images',
            field=models.ManyToManyField(through='merchandise.VariantImage', to='merchandise.MerchandiseImage'),
        ),
        migrations.AddField(
            model_name='merchandisevariant',
            name='merchandise',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='merchandise.Merchandise'),
        ),
        migrations.AddField(
            model_name='merchandise',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='merchandises_of_category', to='merchandise.MerchandiseCategory'),
        ),
        migrations.AddField(
            model_name='merchandise',
            name='merchandise_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='merchandises_of_type', to='merchandise.MerchandiseType'),
        ),
        migrations.AddField(
            model_name='collection',
            name='merchandises',
            field=models.ManyToManyField(blank=True, related_name='collections', to='merchandise.Merchandise'),
        ),
        migrations.AddField(
            model_name='attributechoicevalue',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='merchandise.MerchandiseAttribute'),
        ),
        migrations.AlterUniqueTogether(
            name='stock',
            unique_together={('variant', 'location')},
        ),
        migrations.AlterUniqueTogether(
            name='attributechoicevalue',
            unique_together={('name', 'attribute')},
        ),
    ]
